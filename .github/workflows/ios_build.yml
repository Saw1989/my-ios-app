name: Build iOS IPA (unsigned)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-ipa:
    runs-on: macos-latest

    env:
      # >>> HIER ANPASSEN <<<
      SCHEME: DerNagelhof
      WORKSPACE:
      PROJECT: DerNagelhof.xcodeproj

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode (optional)
        run: |
          sudo xcode-select -s /Applications/Xcode_16.app || true
          xcodebuild -version
          xcodebuild -showsdks || true

      - name: Print projects & schemes (pre-build)
        run: |
          set -euo pipefail
          ls -1 *.xcodeproj || true
          ls -1 *.xcworkspace || true
          if [ -n "${WORKSPACE:-}" ]; then
            echo "=== xcodebuild -list (workspace) ==="
            xcodebuild -workspace "$WORKSPACE" -list || true
          fi
          if [ -n "${PROJECT:-}" ]; then
            echo "=== xcodebuild -list (project) ==="
            xcodebuild -project "$PROJECT" -list || true
          fi
          echo "Hinweis: env.SCHEME muss mit einem der gelisteten Schemes Ã¼bereinstimmen."

      - name: Build .app (no code signing; generic iOS destination)
        run: |
          set -euo pipefail
          DERIVED="build"
          xcodebuild \
            -project "$PROJECT" \
            -scheme "$SCHEME" \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath "$DERIVED" \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY=""
          echo "APP_DIR=$DERIVED/Build/Products/Release-iphoneos" >> $GITHUB_ENV

      - name: Package IPA (unsigned)
        run: |
          set -euo pipefail
          APP_PATH=$(find "$APP_DIR" -maxdepth 1 -name "*.app" -print -quit)
          if [ -z "$APP_PATH" ]; then
            echo "Keine .app gefunden unter $APP_DIR"
            ls -la "$APP_DIR" || true
            exit 1
          fi
          rm -rf Payload
          mkdir -p Payload
          cp -R "$APP_PATH" Payload/
          IPA_NAME="$(basename "$APP_PATH" .app).ipa"
          /usr/bin/zip -r "$IPA_NAME" Payload >/dev/null
          echo "IPA_NAME=$IPA_NAME" >> $GITHUB_ENV
          echo "Erzeugt: $IPA_NAME"

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IPA_NAME }}
          path: ${{ env.IPA_NAME }}
